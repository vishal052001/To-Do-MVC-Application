@Html.Partial("~/Views/ToDo/Create.cshtml")
@Html.Partial("~/Views/ToDo/Edit.cshtml")
@Html.Partial("~/Views/ToDo/Delete.cshtml")
@Html.Partial("~/Views/ToDo/View.cshtml")

@model IEnumerable<ToDoListAppMVC.Models.ToDoItem>

@{
    ViewData["Title"] = "To-Do List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userRole = Context.Session.GetString("Role");
}

<div class="px-3">
<div class="d-flex justify-content-between align-items-center mt-4">
    <form method="get" action="@Url.Action("Index", "ToDo")" class="d-flex" style="flex-grow: 1; max-width: 500px;">
        <input type="text" class="form-control" id="search" name="search" value="@ViewData["SearchQuery"]" placeholder="Search To-Do Title" />
        <button type="submit" class="btn btn-primary mx-2" style="width: 115px; font-size: 14px; height: 38px;">Search</button>
        <button type="button" class="btn btn-secondary" onclick="clearSearch()" style="width: 115px; font-size: 14px; height: 38px;">Show All</button>
    </form>

        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTodoModal" style="width: auto;font-size: 14px; height: 38px;position:relative;right:24px">Add New ToDo</button>
    
</div>

<hr />
<table class="table mt-3">
    <thead>
        <tr>
            <th>To-Do Title</th>
            <th>Status</th>
            <th style="text-align: right; padding-right: 50px;">Actions</th>
        </tr>
    </thead>
    <tbody id="todoTableBody">
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Title</td>
                <td>@(item.IsCompleted ? "Completed" : "Pending")</td>
                <td class="text-end">
                    <button class="btn btn-info btn-sm" onclick="showViewModal(@item.Id)">View</button>
                  
                        <button class="btn btn-primary btn-sm" onclick="showEditModal(@item.Id)">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="showDeleteModal(@item.Id)">Delete</button>
                    
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewData["CurrentPage"].Equals(1) ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { search = ViewData["SearchQuery"], page = (int)ViewData["CurrentPage"] - 1 })">Previous</a>
            </li>

            @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
            {
                <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { search = ViewData["SearchQuery"], page = i })">@i</a>
                </li>
            }

            <li class="page-item @((int)ViewData["CurrentPage"] >= (int)ViewData["TotalPages"] ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { search = ViewData["SearchQuery"], page = (int)ViewData["CurrentPage"] + 1 })">Next</a>
            </li>
        </ul>
    </nav>
    <a asp-action="ExportToExcel" class="btn btn-success" style="width: 115px; font-size: 14px; height: 38px;position: relative; right: 30px">Export</a>
</div>

</div>
<script src="~/js/todo.js"></script>
